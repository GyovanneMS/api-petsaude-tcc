// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ************************** COMMON USER **************************

model User {
  id                 Int           @id @default(autoincrement())
  personName         String        @map("person_name")
  cpf                String
  password           String //JÃ¡ tem o md5???
  rg                 String
  email              String
  dataNascimento     Date           @map("data_Nascimento")
  profilePhoto       String?       @map("profile_photo")
  profileBannerPhoto String?       @map("profile_banner_photo")
  PhoneNumber        PhoneNumber[]

  addressId Int     @map("address_id")
  Address   Address @relation(fields: [addressId], references: [id])

  @@map("tbl_user")
}

model Tutor{
  id       Int  @id @default(autoincrement())
  
  userId   Int  @map("user_id")
  User     User @relation(fields: [userId], references: [id])
  
  Pet           Pet[]
}

// ************************** VET INFOS **************************

model VetInfos {
  id             Int    @id @default(autoincrement())
  biografia      String?
  avalicao       Int
  crmv           Int

  AnimalTypesVetInfos     AnimalTypesVetInfos[]
  PhotosVet               PhotosVet[]
  Formation               Formation[]
  VeterinaryEspecialities VeterinarySpecialities[]
  
  ufId    Int   @map("uf_state_id")
  State   State @relation(fields: [ufId], references: [id])
  userId  Int   @map("user_id")
  User    User  @relation(fields: [userId], references: [id])


  @@map("tbl_vet_infos")
}

model PhotosVet{
  id            Int           @id @default(autoincrement())
  Url           String[]
  
  vetInfosId    Int       @map("vet_infos_id")
  VetInfos      VetInfos  @relations(fields: [vetInfosId], references: [id])
  
  @@map("tbl_photos_vet")
}

model AnimalTypesVetInfos {
  id Int @id @default(autoincrement())

  vetInfosId Int      @map("vet_infos_id")
  vet        VetInfos @relation(fields: [vetInfosId], references: [id])

  animalTypesId Int         @map("animal_type_id")
  animalTypes   AnimalTypes @relation(fields: [animalTypesId], references: [id])

  @@map("tbl_animal_type_vet_infos")
}

model Formation {
  id             Int          @id @default(autoincrement())
  year           Year
  
  universityId    Int         @map("university_id")
  University      University  @relation(fields: [universityId], references: [id])
  
  @@map("tbl_formation")
}

model University{
  id        Int        @id @default(autoincrement())
  name      String
  
  Formation Formation[]
  
  @@map("tbl_university")
}

model VeterinarySpecialities {
  id             Int          @id @default(autoincrement())
  vetInfosId     Int          @map("vet_infos_id")
  specialitiesId Int          @map("specialities_id")
  vetInfos       VetInfos     @relation(fields: [vetInfosId], references: [id])
  specialities   Specialities @relation(fields: [specialitiesId], references: [id])

  @@map("tbl_veterinary_specialities")
}

model Specialities {
  id                      Int                      @id @default(autoincrement())
  name                    String
  VeterinaryEspecialities VeterinarySpecialities[]

  @@map("tbl_specialities")
}

model AnimalTypes {
  id                  Int                   @id @default(autoincrement())
  name                String
  AnimalTypesVetInfos AnimalTypesVetInfos[]

  @@map("tbl_animal_type")
}

// ************************** PHONE NUMBER **************************

model PhoneNumber {
  id     Int    @id @default(autoincrement())
  number String
  ddd    Int

  userId Int  @map("user_id")
  User   User @relation(fields: [userId], references: [id])
  
  formatPhoneId int           @map("phone_format_id")
  FormatPhone   FormatPhone   @relation(fields: [formatPhoneId], references: [id])

  @@map("tbl_phone_number")
}

model FormatPhone{
  id     Int    @id @default(autoincrement())
  Name   String
  
  PhoneNumber PhoneNumber[]
  
  @@map("tbl_format_phone")
}

// ************************** ADDRESS **************************

model Address {
  id         Int     @id @default(autoincrement())
  cep        String
  street     String
  complement String?
  number     String

  neighborhoodId Int          @map("neighborhood_id")
  neighborhood   Neighborhood @relation(fields: [neighborhoodId], references: [id])
  User           User[]
  Universitry    University[]

  @@map("tbl_address")
}

model Neighborhood {
  id   Int    @id @default(autoincrement())
  name String

  cityId  Int       @map("city_id")
  city    City      @relation(fields: [cityId], references: [id])
  Address Address[]

  @@map("tbl_neighborhood")
}

model City {
  id   Int    @id @default(autoincrement())
  name String

  stateId      Int            @map("state_id")
  state        State          @relation(fields: [stateId], references: [id])
  Neighborhood Neighborhood[]

  @@map("tbl_city")
}

model State {
  id       Int    @id @default(autoincrement())
  name     String
  initials String
  City     City[]

  @@map("tbl_state")
}

// ************************** PET INFOS **************************

model Pet {
  id        Int      @id @default(autoincrement())
  name      String
  birthDate Date @map("birth_date")
  photo     String?
  microship Int?
  height    Double?
  weight    Double?

  petSizeId Int     @map("pet_size_id")
  petSize   PetSize @relation(fields: [petSizeId], references: [id])

  petGenderId Int       @map("pet_gender_id")
  petGender   PetGender @relation(fields: [petGenderId], references: [id])

  petRaceId   Int       @map("pet_race_id")
  petRace   PetRace @relation(fields: [petRaceId], references: [id])
  
  petLevelAggressivenessId   Int       @map("pet_level_aggressiveness_id")
  petLevelAggressiveness     PetLevelAggressiveness   @relation(fields: [petLevelAggressivenessId], references: [id])

  owner  User @relation(fields: [userId], references: [id])
  userId Int

  @@map("tbl_pet")
}

model petLevelAgressiceness {
  id   Int    @id @default(autoincrement())
  level   String
  
  Pet Pet[]
  
  @@map("tbl_pet_level_agressiveness")
}

model PetSize {
  id   Int    @id @default(autoincrement())
  name String

  Pet Pet[]

  @@map("tbl_pet_size")
}

model PetGender {
  id       Int    @id @default(autoincrement())
  initials String
  name     String
  
  Pet      Pet[]

  @@map("tbl_pet_gender")
}

model PetRace {
  id   Int    @id @default(autoincrement())
  name String
  pet  Pet[]

  petSpecieId   Int       @map("pet_specie_id")
  petSpecie     PetSpecie @relation(fields: [petSpecieId], references: [id])

  @@map("tbl_pet_race")
}

model PetSpecie {
  id   Int    @id @default(autoincrement())
  name String
  PetRace  PetRace[]

  @@map("tbl_pet_specie")
}
